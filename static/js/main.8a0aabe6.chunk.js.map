{"version":3,"sources":["components/Size.js","components/Main.js","components/Pic.js","App.js","reportWebVitals.js","index.js"],"names":["Size","props","currentSize","onSizeSet","isSelected","s","console","log","className","onClick","Main","products","onAdd","useState","size","setSize","Pic","src","alt","App","product","id","name","price","image","cart","setCart","length","cartItem","JSON","stringify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MAuCeA,MArCf,SAAcC,GACZ,IAAQC,EAA2BD,EAA3BC,YAAaC,EAAcF,EAAdE,UACrB,SAASC,EAAWC,GAClB,OAAIH,GAAeG,EACV,aAEA,MAUX,OAFAC,QAAQC,IAAIL,GAGV,gCACE,sBAAKM,UAAU,kBAAf,iBACM,qBAAKA,UAAU,OAAf,eACJ,sBAAMA,UAAU,SAAhB,SAA0BN,OAE5B,sBAAKM,UAAU,2BAAf,UACE,wBAAQC,QAAS,kBAAMN,EAAU,MAAMK,UAAWJ,EAAW,KAA7D,eAGA,wBAAQK,QAAS,kBAAMN,EAAU,MAAMK,UAAWJ,EAAW,KAA7D,eAGA,wBAAQK,QAAS,kBAAMN,EAAU,MAAMK,UAAWJ,EAAW,KAA7D,sBC5BO,SAASM,EAAKT,GACCA,EAApBU,SAAR,IAAkBC,EAAUX,EAAVW,MAClB,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAOA,OACE,uBAAMP,UAAU,QAAhB,UACE,gCACE,oBAAIA,UAAU,SAAd,yBACA,qBAAKA,UAAU,eAAf,oBACA,+YAQA,cAAC,EAAD,CAAMN,YAAaY,EAAMX,UAnB/B,SAAmBE,GACjBU,EAAQV,SAoBN,qBAAKG,UAAU,YAAf,SACE,wBAAQC,QAAS,kBAAMG,EAAME,IAAON,UAAU,OAA9C,8BC1BO,SAASQ,EAAIf,GAC1B,OACE,sBAAMO,UAAU,QAAhB,SACE,8BACE,qBAAKS,IAAI,kCAAkCC,IAAI,YCoCxCC,MAnCf,WACE,IAAMC,EAAU,CACdC,GAAI,IACJC,KAAM,UACNC,MAAO,GACPC,MAAO,mCAYT,EAAwBX,mBAAS,IAAjC,mBAAOY,EAAP,KAAaC,EAAb,KAEA,OACE,sBAAKlB,UAAU,MAAf,UACE,yBAAQA,UAAU,mBAAlB,UACE,wBACA,yCACS,sCAASiB,EAAKE,OAAd,aAGX,sBAAKnB,UAAU,MAAf,UACE,cAACQ,EAAD,IACA,cAACN,EAAD,CAAME,MArBZ,SAAmBE,GACjB,IAAIc,EAAQ,2BACPR,GADO,IAEVN,KAAMA,IAERY,EAAQ,GAAD,mBAAKD,GAAL,CAAWG,KAClBtB,QAAQC,IAAIkB,EAAKE,QACjBrB,QAAQC,IAAIsB,KAAKC,UAAUL,cCVhBM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8a0aabe6.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nfunction Size(props) {\r\n  const { currentSize, onSizeSet } = props;\r\n  function isSelected(s) {\r\n    if (currentSize == s) {\r\n      return \"btn active\";\r\n    } else {\r\n      return \"btn\";\r\n    }\r\n  }\r\n\r\n  let borderStyle = {\r\n    border: \"2px solid #cccccc\",\r\n  };\r\n\r\n  console.log(currentSize);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"row2 color size\">\r\n        SIZE<div className=\"star\">*</div>\r\n        <span className=\"color1\">{currentSize}</span>\r\n      </div>\r\n      <div className=\"row2 leftalign container\">\r\n        <button onClick={() => onSizeSet(\"S\")} className={isSelected(\"S\")}>\r\n          S\r\n        </button>\r\n        <button onClick={() => onSizeSet(\"M\")} className={isSelected(\"M\")}>\r\n          M\r\n        </button>\r\n        <button onClick={() => onSizeSet(\"L\")} className={isSelected(\"L\")}>\r\n          L\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Size;\r\n","import React, { useState } from \"react\";\r\nimport Size from \"./Size\";\r\n\r\nexport default function Main(props) {\r\n  const { products, onAdd } = props;\r\n  const [size, setSize] = useState(\"\");\r\n  function onSizeSet(s) {\r\n    setSize(s);\r\n    // console.log(\"size set\");\r\n    // console.log(\"s:\", s, \"size:\", size);\r\n  }\r\n\r\n  return (\r\n    <main className=\"col-1\">\r\n      <div>\r\n        <h2 className=\"color1\">Classic Tee</h2>\r\n        <div className=\"color1 thick\">$75.00</div>\r\n        <p>\r\n          Lorem Ipsum is simply dummy text of the printing and typesetting\r\n          industry. Lorem Ipsum has been the industry's standard dummy text ever\r\n          since the 1500s, when an unknown printer took a galley of type and\r\n          scrambled it to make a type specimen book. It has survived not only\r\n          five centuries, but also the leap into electronic typesetting,\r\n          remaining essentially unchanged.\r\n        </p>\r\n        <Size currentSize={size} onSizeSet={onSizeSet}></Size>\r\n      </div>\r\n      <div className=\"container\">\r\n        <button onClick={() => onAdd(size)} className=\"btn2\">\r\n          ADD TO CART\r\n        </button>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Pic(props) {\r\n  return (\r\n    <main className=\"col-2\">\r\n      <div>\r\n        <img src=\"https://i.imgur.com/rQEtas1.jpg\" alt=\"Tee\"></img>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n","import Header from \"./components/Header\";\r\nimport Main from \"./components/Main\";\r\nimport Pic from \"./components/Pic\";\r\nimport Basket from \"./components/Basket\";\r\nimport data from \"./data\";\r\nimport { useState } from \"react\";\r\n\r\nfunction App() {\r\n  const product = {\r\n    id: \"1\",\r\n    name: \"T-Shirt\",\r\n    price: 75,\r\n    image: \"https://i.imgur.com/rQEtas1.jpg\",\r\n  };\r\n\r\n  function addToCart(size) {\r\n    let cartItem = {\r\n      ...product,\r\n      size: size,\r\n    };\r\n    setCart([...cart, cartItem]);\r\n    console.log(cart.length);\r\n    console.log(JSON.stringify(cart));\r\n  }\r\n  const [cart, setCart] = useState([]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"row block center\">\r\n        <div></div>\r\n        <h3>\r\n          My Cart<span> ({cart.length})</span>\r\n        </h3>\r\n      </header>\r\n      <div className=\"row\">\r\n        <Pic></Pic>\r\n        <Main onAdd={addToCart}></Main>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}